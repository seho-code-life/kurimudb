import{_ as n,c as s,o as a,a as e}from"./app.197c0aa2.js";const m='{"title":"Migrate from Version 3","description":"","frontmatter":{},"headers":[{"level":2,"title":"Disruptive Changes","slug":"disruptive-changes"},{"level":3,"title":"Model Definition","slug":"model-definition"},{"level":3,"title":"Model Function","slug":"model-function"},{"level":3,"title":"Model Subscription","slug":"model-subscription"},{"level":3,"title":"Storage Api Class","slug":"storage-api-class"},{"level":2,"title":"New Functions and Features","slug":"new-functions-and-features"},{"level":3,"title":"Simplified Model Filling","slug":"simplified-model-filling"},{"level":3,"title":"Auto Subscription Function","slug":"auto-subscription-function"},{"level":2,"title":"Model Driver change","slug":"model-driver-change"},{"level":3,"title":"LocalStorage","slug":"localstorage"},{"level":3,"title":"Dexie","slug":"dexie"}],"relativePath":"en/migrations/v3.md","lastUpdated":1635329242210}',t={},p=e(`<h1 id="migrate-from-version-3" tabindex="-1">Migrate from Version 3 <a class="header-anchor" href="#migrate-from-version-3" aria-hidden="true">#</a></h1><p>Compared with the 3.x version, Kurimudb 4.x has many changes. They may be some new features or some incompatible changes. This document will explain the specific changes for you in detail.</p><h2 id="disruptive-changes" tabindex="-1">Disruptive Changes <a class="header-anchor" href="#disruptive-changes" aria-hidden="true">#</a></h2><h3 id="model-definition" tabindex="-1">Model Definition <a class="header-anchor" href="#model-definition" aria-hidden="true">#</a></h3><p>In the 4.x version, some default values and automatic inference were added to the definition model.</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token keyword">class</span> <span class="token class-name">ConfigState</span> <span class="token keyword">extends</span> <span class="token class-name">Models<span class="token punctuation">.</span>keyValue</span><span class="token operator">&lt;</span>
  <span class="token comment">// In version 4.x, it is no longer necessary to define the type of data, and the default is Record&lt;string | number, any&gt;</span>
  <span class="token comment">// Record&lt;string | number, any&gt;</span>
<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token comment">// In version 4.x, the model name can be omitted. Omit will use the class name of the current class.</span>
      <span class="token comment">// name: &quot;ConfigState&quot;,</span>
      <span class="token comment">// In the 4.x version, the type can be omitted. If omitted, the key-value model will be&#39;string&#39;, and the collection model will be &#39;number&#39;.</span>
      <span class="token comment">// type: &quot;string&quot;,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="model-function" tabindex="-1">Model Function <a class="header-anchor" href="#model-function" aria-hidden="true">#</a></h3><ul><li><p>The <code>yourModel.all()</code> function is changed to be available only under the collection model.</p></li><li><p>When fetching data that does not exist in the model, you will get <code>null</code> originally, but now you will get <code>undefined</code>.</p></li></ul><h3 id="model-subscription" tabindex="-1">Model Subscription <a class="header-anchor" href="#model-subscription" aria-hidden="true">#</a></h3><p>The original return value of the bulk subscription function was an array containing all the values of unsubscription. Now the return value has been changed to a function to unsubscribe all the values of this bulk subscription after execution.</p><div class="language-js line-numbers-mode"><pre><code><span class="token comment">// version 3.x</span>
<span class="token keyword">const</span> unsubscribeFunctions <span class="token operator">=</span> <span class="token function">batch$</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> unsubscribe <span class="token keyword">of</span> unsubscribeFunctions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// version 4.x</span>
<span class="token keyword">const</span> unsubscribe <span class="token operator">=</span> <span class="token function">batch$</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="storage-api-class" tabindex="-1">Storage Api Class <a class="header-anchor" href="#storage-api-class" aria-hidden="true">#</a></h3><p>The syntax of the <code>subscribeItem</code> function in the Storage Api class is now changed as follows:</p><div class="language-js line-numbers-mode"><pre><code><span class="token comment">// version 3.x</span>
local<span class="token punctuation">.</span><span class="token function">subscribeItem</span><span class="token punctuation">(</span><span class="token string">&quot;say&quot;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// version 4.x</span>
local<span class="token punctuation">.</span><span class="token function">subscribeItem</span><span class="token punctuation">(</span><span class="token string">&quot;say&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="new-functions-and-features" tabindex="-1">New Functions and Features <a class="header-anchor" href="#new-functions-and-features" aria-hidden="true">#</a></h2><h3 id="simplified-model-filling" tabindex="-1">Simplified Model Filling <a class="header-anchor" href="#simplified-model-filling" aria-hidden="true">#</a></h3><p>In addition to passing in a closure, you can also pass in an object or array to fill the key-value model or collection model respectively.</p><div class="language-js line-numbers-mode"><pre><code><span class="token comment">// key-value model:</span>
<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">seed</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  foo<span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span>
  baz<span class="token operator">:</span> <span class="token string">&#39;qux&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Is equivalent to:</span>
<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">seed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>baz <span class="token operator">=</span> <span class="token string">&#39;qux&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-js line-numbers-mode"><pre><code><span class="token comment">// Collection model:</span>
<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">seed</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Is equivalent to:</span>
<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">seed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="auto-subscription-function" tabindex="-1">Auto Subscription Function <a class="header-anchor" href="#auto-subscription-function" aria-hidden="true">#</a></h3><p>When any of the values used in the closure is changed, the closure will be executed again:</p><div class="language-js line-numbers-mode"><pre><code><span class="token function">auto$</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>configState<span class="token punctuation">.</span>data<span class="token punctuation">.</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>configState<span class="token punctuation">.</span>data<span class="token punctuation">.</span>bar<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="model-driver-change" tabindex="-1">Model Driver change <a class="header-anchor" href="#model-driver-change" aria-hidden="true">#</a></h2><blockquote><p>\u{1F4DC} To use Kurimudb 4.x version, all driver versions need to be upgraded to 4.x as well.</p></blockquote><h3 id="localstorage" tabindex="-1">LocalStorage <a class="header-anchor" href="#localstorage" aria-hidden="true">#</a></h3><p>The LocalStorage driver now supports the use of the <code>all()</code> function.</p><h3 id="dexie" tabindex="-1">Dexie <a class="header-anchor" href="#dexie" aria-hidden="true">#</a></h3><p>The location where the <code>db</code> parameter of the Dexie driver is passed is changed from the original definition of a <strong>class member variable</strong> to the definition in the <strong>constructor</strong>.</p><div class="language-js line-numbers-mode"><div class="highlight-lines"><br><br><div class="highlighted">\xA0</div><br><br><br><br><br><br><br><br></div><pre><code><span class="token comment">// version 3.x</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token keyword">class</span> <span class="token class-name">NoteList</span> <span class="token keyword">extends</span> <span class="token class-name">Models<span class="token punctuation">.</span>collection</span> <span class="token punctuation">{</span>
  db<span class="token operator">:</span> Dexie <span class="token operator">=</span> db<span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-js line-numbers-mode"><div class="highlight-lines"><br><br><br><br><br><div class="highlighted">\xA0</div><br><br><br><br></div><pre><code><span class="token comment">// version 4.x</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token keyword">class</span> <span class="token class-name">NoteList</span> <span class="token keyword">extends</span> <span class="token class-name">Models<span class="token punctuation">.</span>collection</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
      db<span class="token operator">:</span> db<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,30),o=[p];function c(l,i,u,r,d,k){return a(),s("div",null,o)}var h=n(t,[["render",c]]);export{m as __pageData,h as default};
